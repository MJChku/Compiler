Terminals unused in grammar

   CLOSETAG
   GT
   LT
   EXC
   UPPER
   LOWER
   HALF


Grammar

    0 $accept: expr $end

    1 expr: beat
    2     | expr beat
    3     | tagseq
    4     | completetag

    5 beat: note
    6     | '!' note note
    7     | '!' note '>' note
    8     | '!' note '<' note
    9     | note '<' note
   10     | note '>' note
   11     | note modifier

   12 note: NOTE

   13 modifier: ENLONG

   14 completetag: BTAG TAGNUM expr ETAG

   15 tagseq: TAG TAGNUM


Terminals, with rules where they appear

$end (0) 0
'!' (33) 6 7 8
'<' (60) 8 9
'>' (62) 7 10
error (256)
NOTE (258) 12
ENLONG (259) 13
CLOSETAG (260)
GT (261)
LT (262)
EXC (263)
UPPER (264)
LOWER (265)
HALF (266)
BTAG (267) 14
ETAG (268) 14
TAG (269) 15
TAGNUM (270) 14 15


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
expr (20)
    on left: 1 2 3 4, on right: 0 2 14
beat (21)
    on left: 5 6 7 8 9 10 11, on right: 1 2
note (22)
    on left: 12, on right: 5 6 7 8 9 10 11
modifier (23)
    on left: 13, on right: 11
completetag (24)
    on left: 14, on right: 4
tagseq (25)
    on left: 15, on right: 3


State 0

    0 $accept: . expr $end
    1 expr: . beat
    2     | . expr beat
    3     | . tagseq
    4     | . completetag
    5 beat: . note
    6     | . '!' note note
    7     | . '!' note '>' note
    8     | . '!' note '<' note
    9     | . note '<' note
   10     | . note '>' note
   11     | . note modifier
   12 note: . NOTE
   14 completetag: . BTAG TAGNUM expr ETAG
   15 tagseq: . TAG TAGNUM

    NOTE  shift, and go to state 1
    BTAG  shift, and go to state 2
    TAG   shift, and go to state 3
    '!'   shift, and go to state 4

    expr         go to state 5
    beat         go to state 6
    note         go to state 7
    completetag  go to state 8
    tagseq       go to state 9


State 1

   12 note: NOTE .

    $default  reduce using rule 12 (note)


State 2

   14 completetag: BTAG . TAGNUM expr ETAG

    TAGNUM  shift, and go to state 10


State 3

   15 tagseq: TAG . TAGNUM

    TAGNUM  shift, and go to state 11


State 4

    6 beat: '!' . note note
    7     | '!' . note '>' note
    8     | '!' . note '<' note
   12 note: . NOTE

    NOTE  shift, and go to state 1

    note  go to state 12


State 5

    0 $accept: expr . $end
    2 expr: expr . beat
    5 beat: . note
    6     | . '!' note note
    7     | . '!' note '>' note
    8     | . '!' note '<' note
    9     | . note '<' note
   10     | . note '>' note
   11     | . note modifier
   12 note: . NOTE

    $end  shift, and go to state 13
    NOTE  shift, and go to state 1
    '!'   shift, and go to state 4

    beat  go to state 14
    note  go to state 7


State 6

    1 expr: beat .

    $default  reduce using rule 1 (expr)


State 7

    5 beat: note .  [$end, NOTE, ETAG, '!']
    9     | note . '<' note
   10     | note . '>' note
   11     | note . modifier
   13 modifier: . ENLONG

    ENLONG  shift, and go to state 15
    '>'     shift, and go to state 16
    '<'     shift, and go to state 17

    $default  reduce using rule 5 (beat)

    modifier  go to state 18


State 8

    4 expr: completetag .

    $default  reduce using rule 4 (expr)


State 9

    3 expr: tagseq .

    $default  reduce using rule 3 (expr)


State 10

    1 expr: . beat
    2     | . expr beat
    3     | . tagseq
    4     | . completetag
    5 beat: . note
    6     | . '!' note note
    7     | . '!' note '>' note
    8     | . '!' note '<' note
    9     | . note '<' note
   10     | . note '>' note
   11     | . note modifier
   12 note: . NOTE
   14 completetag: . BTAG TAGNUM expr ETAG
   14            | BTAG TAGNUM . expr ETAG
   15 tagseq: . TAG TAGNUM

    NOTE  shift, and go to state 1
    BTAG  shift, and go to state 2
    TAG   shift, and go to state 3
    '!'   shift, and go to state 4

    expr         go to state 19
    beat         go to state 6
    note         go to state 7
    completetag  go to state 8
    tagseq       go to state 9


State 11

   15 tagseq: TAG TAGNUM .

    $default  reduce using rule 15 (tagseq)


State 12

    6 beat: '!' note . note
    7     | '!' note . '>' note
    8     | '!' note . '<' note
   12 note: . NOTE

    NOTE  shift, and go to state 1
    '>'   shift, and go to state 20
    '<'   shift, and go to state 21

    note  go to state 22


State 13

    0 $accept: expr $end .

    $default  accept


State 14

    2 expr: expr beat .

    $default  reduce using rule 2 (expr)


State 15

   13 modifier: ENLONG .

    $default  reduce using rule 13 (modifier)


State 16

   10 beat: note '>' . note
   12 note: . NOTE

    NOTE  shift, and go to state 1

    note  go to state 23


State 17

    9 beat: note '<' . note
   12 note: . NOTE

    NOTE  shift, and go to state 1

    note  go to state 24


State 18

   11 beat: note modifier .

    $default  reduce using rule 11 (beat)


State 19

    2 expr: expr . beat
    5 beat: . note
    6     | . '!' note note
    7     | . '!' note '>' note
    8     | . '!' note '<' note
    9     | . note '<' note
   10     | . note '>' note
   11     | . note modifier
   12 note: . NOTE
   14 completetag: BTAG TAGNUM expr . ETAG

    NOTE  shift, and go to state 1
    ETAG  shift, and go to state 25
    '!'   shift, and go to state 4

    beat  go to state 14
    note  go to state 7


State 20

    7 beat: '!' note '>' . note
   12 note: . NOTE

    NOTE  shift, and go to state 1

    note  go to state 26


State 21

    8 beat: '!' note '<' . note
   12 note: . NOTE

    NOTE  shift, and go to state 1

    note  go to state 27


State 22

    6 beat: '!' note note .

    $default  reduce using rule 6 (beat)


State 23

   10 beat: note '>' note .

    $default  reduce using rule 10 (beat)


State 24

    9 beat: note '<' note .

    $default  reduce using rule 9 (beat)


State 25

   14 completetag: BTAG TAGNUM expr ETAG .

    $default  reduce using rule 14 (completetag)


State 26

    7 beat: '!' note '>' note .

    $default  reduce using rule 7 (beat)


State 27

    8 beat: '!' note '<' note .

    $default  reduce using rule 8 (beat)
